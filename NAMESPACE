import(mvtnorm, lattice, ggplot2)
importFrom("grDevices", "rgb")
importFrom("graphics", "lines", "plot", "points")
importFrom("stats", "AIC", "IQR", "acf", "approx", "as.formula",
           "binomial", "coef", "cov2cor", "glm", "lm", "logLik",
           "model.matrix", "na.fail", "nlminb", "optim", "optimize",
           "pnorm", "predict", "qnorm", "qt", "quantile", "quasi",
           "sd", "terms", "uniroot", "var", "vcov")
importFrom("utils", "setTxtProgressBar", "txtProgressBar", "browseURL")

export(fitMod, defBnds, bFitMod, maFitMod, MCTtest, bMCTtest, MCPMod,
       betaMod, quadratic, emax, exponential,linear, linlog, logistic, sigEmax, linInt,
       betaModGrad, quadraticGrad, emaxGrad, exponentialGrad,
       linearGrad, linlogGrad, logisticGrad, sigEmaxGrad, linIntGrad,
       Mods, getResp, TD, ED, plotMods,
       guesst, MCTtest, MCTpval, critVal, mvpostmix, gAIC, powMCTInterim,
       mvtnorm.control, 
       optContr, plotContr,
       powMCT, sampSize, sampSizeMCT, targN, powN, planMod,
       optDesign, calcCrit, rndDesign,
       DesignMCPModApp)
S3method(predict, MCPMod)
S3method(print, MCPMod)
S3method(print, sampSize)
S3method(plot, MCPMod)
S3method(summary, MCPMod)
S3method(print, summary.MCPMod)
S3method(summary, DRMod)
S3method(print, summary.DRMod)
S3method(print, DRMod)
S3method(plot, DRMod)
S3method(vcov, DRMod)
S3method(coef, DRMod)
S3method(predict, DRMod)
S3method(print, MCTtest)
S3method(print, bMCTtest)
S3method(print, DRdesign)
S3method(plot, DRdesign)
S3method(print, optContr)
S3method(summary, optContr)
S3method(print, summary.optContr)
S3method(plot, optContr)
S3method(plot, Mods)
S3method(AIC, DRMod)
S3method(gAIC, DRMod)
S3method(logLik, DRMod)
S3method(gAIC, DRMod)

S3method(predict, bFitMod)
S3method(plot, bFitMod)
S3method(print, bFitMod)
S3method(coef, bFitMod)

S3method(print, maFit)
S3method(predict, maFit)
S3method(plot, maFit)

S3method(plot, targN)

S3method(plot, planMod)
S3method(print, planMod)
S3method(summary, planMod)
S3method(print, summary.planMod)

useDynLib(DoseFinding, .registration = TRUE)

